<% last_play = local_assigns[:last_play] ? game.last_play.merge(player: game.last_player).symbolize_keys : {}  %>

<div id="<%= dom_id game %>" data-controller="game">
  <pre><%= last_play.inspect %></pre>
  <h1><%= game.user.email %>'s game</h1>

  <% case game.status %>
  <% when "lobby" %>
    <% if game.players.length < 2 %>
      <h2>Waiting for players...</h2>
    <% else %>
      <h2>Ready to start!</h2>
      <% if game.user == current_user %>
        <%= button_to 'Start!', game, method: :patch %>
      <% end %>
    <% end %>

    <ul>
      <% game.players.each do |player| %>
        <li><%= player.user.email %></li>
      <% end %>
    </ul>

    <% if game.users.include?(current_user) %>
      <% if game.user != current_user %>
        <%= button_to 'Leave', game_players_path(game), method: :delete %>
      <% end %>
    <% else %>
      <%= button_to 'Join!', game_players_path(game) %>
    <% end %>
  <% when "playing" %>
    <% your_turn = game.current_player.user == current_user %>
    <% can_draw = your_turn && (game.plus > 0 || game.current_player.cards.all?{ !game.place?(it) }) %>
    <h2>
      <% if game.current_player.user == current_user %>
        Your turn!
      <% else %>
        <%= game.current_player.user.email %>'s turn
      <% end %>
    </h2>
    <div>
      <% if game.plus > 0 %>
        Stack: <%= game.plus %>
      <% end %>
    </div>
    <div>
      <% if game.dir.negative? %>
        Reversed!
      <% end %>
    </div>
    <div>
      <% if game.top.wild? %>
        Color: <%= game.color %>
      <% end %>
    </div>
    <div class="players-area">
      <div class="players-list">
        <% game.players.reject { it.user == current_user }.each do |player| %>
          <div class="player <%= 'current-player' if game.current_player == player %>">
            <div class="player-info">
              <strong><%= player.user.email %></strong>
              <% if game.current_player == player %>
                <span class="turn-indicator">Current Turn</span>
              <% end %>
            </div>
            <ul class="other-player-cards" data-game-target="otherPlayerCards" data-player="<%= player.id %>">
              <% drawn = last_play[:player] == player && last_play[:play] == 'draw' %>
              <% player.cards.each.with_index do |card, index| %>
                <% draw = drawn && index >= player.cards.count - last_play[:draw] %>
                <li class="card other-player-card <%= draw ? 'drawn' : '' %>" data-game-target="otherCard" data-drawn="<%= draw.to_s %>">
                  <%= inline_svg("cards/back.svg") %>
                </li>
              <% end %>
            </ul>
          </div>
        <% end %>
      </div>
    </div>
    <div class="play-area">
      <div class="discard">
        <div class="deck-stack" style="width: <%= (game.discard.length-1)*0.5 %>px"></div>
        <% played_card = last_play[:play] == 'card' && last_play[:player].user != current_user %>
        <div class="discard-card card card-<%= game.top.color %>" data-game-target="discard" data-player="<%= played_card ? last_play[:player].id : '' %>">
          <%= inline_card(game.top) %>
        </div>
      </div>
      <div class="deck">
        <div class="deck-stack" style="width: <%= (game.deck.length-1)*0.5 %>px"></div>
        <div class="card deck-next-card"><%= inline_svg("cards/back.svg") %></div>
        <div class="card deck-card <%= class_names(playable: can_draw) %>" data-game-target="deck">
          <% if can_draw %>
            <%= button_to game_turn_path(game, play: 'draw'), class: 'card-button', form: { class: 'card-form' }, data: { action: 'game#draw' } do %>
              <%= inline_svg("cards/back.svg") %>
            <% end %>
          <% else %>
            <%= inline_svg("cards/back.svg") %>
          <% end %>
        </div>
      </div>
    </div>
    <ul class="cards" data-game-target="playerCards">
      <% game.players.find_by(user: current_user).cards.each do |card| %>
        <li data-controller="card" class="
          card
          card-<%= card.color %>
          <%= class_names(
            playable: your_turn && game.place?(card),
            unplayable: your_turn && !game.place?(card)
          ) %>
        ">
          <% if your_turn && game.place?(card) %>
            <% if card.wild? %>
              <button data-action="card#open" class="card-button">
                <%= inline_card(card) %>
              </button>
              <dialog data-card-target="dialog">
                <% Card::COLORS.each do |color| %>
                  <%= button_to color.capitalize, game_turn_path(game, play: 'card', card_id: card.id, color:, data: { action: 'game#play' }) %>
                <% end %>
              </dialog>
            <% else %>
              <%= button_to game_turn_path(game, play: 'card', card_id: card.id), class: 'card-button', form: { class: 'card-form' }, data: { action: 'game#play' } do %>
                <%= inline_card(card) %>
              <% end %>
            <% end %>
          <% else %>
            <%= inline_card(card) %>
          <% end %>
        </li>
      <% end %>
    </ul>
  <% when "finished" %>
    <h2><%= game.winner.email %> wins!</h2>
  <% when "abandoned" %>
    <h2>Abandoned!</h2>
  <% end %>

  <% if game.status.in?(%w[lobby playing]) && game.user == current_user %>
    <%= button_to "Abandon", game, method: :delete %>
  <% end %>
</div>
